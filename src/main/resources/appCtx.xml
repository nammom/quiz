<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="driverClass"
						value="oracle.jdbc.driver.OracleDriver"/>
			<property name="jdbcUrl"
						value="jdbc:oracle:thin:@localhost:1521:xe"/>
			<property name="user" value="hi"/>
			<property name="password" value="hi"/>
			<property name="maxPoolSize" value="100"/>		
			<property name="maxIdleTime" value="600"/>	
			<property name="idleConnectionTestPeriod" value="300"/>	
	</bean>		

	<!--  JdbcTemplate클래스 객체를 생성할때 datasource를 주입할 수 있게한다.-->
	<bean id="memberDao" class="spring.MemberDao">
		<constructor-arg ref="dataSource"/>    
	</bean>
	
	<!--  트랜젝션 사용-->
	<bean id = "transactionManager"
		class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name = "dataSource" ref = "dataSource"/>	
	</bean>
	
	<tx:annotation-driven transaction-manager = "transactionManager"/>
	
	<!--  암호화 사용-->	
	<bean id = "passwordEncoder"
	class = "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
	

	<bean id="memberRegSvc" class="spring.MemberRegisterService">
		<constructor-arg ref="memberDao" />
		<property name="setPassWordEncoder" ref ="passwordEncoder"/>
	</bean>
	
	<bean id="changePwdSvc" class="spring.ChangePasswordService">
		<constructor-arg ref="memberDao" />
		<property name="setPassWordEncoder" ref ="passwordEncoder"/>
	</bean>
	
	<bean id="memberPrinter" class="spring.MemberPrinter"></bean>
	
	<bean id="listPrinter" class="spring.MemberListPrinter">
		<constructor-arg ref="memberDao"/>
		<constructor-arg ref="memberPrinter"/>
	</bean>
	
	<bean id="infoPrinter" class="spring.MemberInfoPrinter">
		<property name="memberDao" ref="memberDao"/>
		<property name="memberPrinter" ref="memberPrinter"/>
	</bean>
</beans>